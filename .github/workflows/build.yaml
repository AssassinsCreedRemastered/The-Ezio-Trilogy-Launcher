name: Build and Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Git
      run: |
        git config --global user.email "github-actions@example.com"
        git config --global user.name "GitHub Actions"

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.x  # Adjust the version if needed

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release

    - name: Test
      run: dotnet test

    - name: Publish
      run: dotnet publish -c Release -o publish --self-contained false

    - name: Package
      run: Compress-Archive -Path .\publish\* -DestinationPath .\app.zip

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: app.zip

    - name: Check for Existing Release
      id: check_release
      run: |
        $RELEASE_TAG = git describe --tags --abbrev=0
        $RELEASE_ID = curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${RELEASE_TAG}" | jq -r '.id // empty'
        echo "::set-output name=release_id::$RELEASE_ID"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create or Update Release
      id: create_or_update_release
      uses: softprops/action-gh-release@v1
      with:
        files: ./app.zip
        tag_name: ${{ github.ref_endswith('refs/tags/') }}
        overwrite: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Release as Pre-release
      if: steps.check_release.outputs.release_id
      run: |
        curl -X PATCH \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"prerelease":true}' \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${{ steps.check_release.outputs.release_id }}"
