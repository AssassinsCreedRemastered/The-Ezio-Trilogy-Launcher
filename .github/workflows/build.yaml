name: Build and Push as Prerelease

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        targetplatform: [x64]
        ChannelName: [Release]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Git
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.x  # Adjust the version if needed

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release

      - name: Test
        run: dotnet test

      - name: Publish
        run: dotnet publish -c Release -r win-x64 --self-contained false /p:PublishSingleFile=true -o publish

      - name: Package
        run: Compress-Archive -Path .\publish\* -DestinationPath .\Launcher.zip

      - name: Delete Existing Release and Tag
        run: |
          $repo = $env:GITHUB_REPOSITORY
          $tag = "beta"

          Write-Host "GitHub Repository: $repo"

          # Check if the release exists
          $existingRelease = Invoke-RestMethod -Uri "https://api.github.com/repos/$repo/releases/tags/$tag" -Method Get -Headers @{
              "Authorization"="Bearer ${{ secrets.GITHUB_TOKEN }}"
          }

          if ($existingRelease) {
              Write-Host "Existing release found. Deleting..."

              # Delete existing release
              try {
                  Invoke-RestMethod -Uri "https://api.github.com/repos/$repo/releases/$($existingRelease.id)" -Method Delete -Headers @{
                      "Authorization"="Bearer ${{ secrets.GITHUB_TOKEN }}"
                  }
                  Write-Host "Existing release deleted successfully."
              } catch {
                  Write-Host "Error deleting existing release: $_"
                  throw $_
              }
          } else {
              Write-Host "No existing release found."
          }

          # Delete existing tag locally and push deletion
          git tag -d $tag || true
          git push origin :refs/tags/$tag || true

      - name: Create New Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./Launcher.zip
          tag_name: beta
          target_commitish: ${{ github.event.before }}
          prerelease: true
