name: Build and Push as Prerelease

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        targetplatform: [x64]
        ChannelName: [Release]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Git
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.x  # Adjust the version if needed

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release

      - name: Test
        run: dotnet test

      - name: Publish
        run: dotnet publish -c Release -r win-x64 --self-contained false /p:PublishSingleFile=true -o publish

      - name: Package
        run: Compress-Archive -Path .\publish\* -DestinationPath .\Launcher.zip

      - name: Delete existing release
        id: delete_release
        run: |
          TAG_NAME="beta"
          API_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/${TAG_NAME}"
          RESPONSE=$(curl -X GET -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$API_URL")
          RELEASE_ID=$(echo "$RESPONSE" | jq -r '.id')
          if [ "$RELEASE_ID" != "null" ]; then
            curl -X DELETE -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$API_URL"
          fi
        shell: bash

      - name: Delete existing tag
        id: delete_tag
        run: |
          TAG_NAME="beta"
          git tag -d $TAG_NAME
          git push --delete origin $TAG_NAME
        shell: bash

      - name: Update release asset
        id: update_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./Launcher.zip
          tag_name: beta
          target_commitish: ${{ github.sha }}
          prerelease: true
          draft: false
